var searchIndex = JSON.parse('{\
"openrailwaymap_exporter":{"doc":"OpenRailwayMap Exporter","t":[0,0,0,0,0,0,0,3,3,4,3,3,13,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,2,8,10,0,3,4,13,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,5,5,5,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,5,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,2,2,2,2,8,10,10,10,2,8,10,10,10,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,2,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11],"n":["app3d","export","importer","prelude","railway_algorithms","railway_api_client","railway_model","AppResource","Edge","InteractionMode","InteractionModeResource","Node","PlaceTrain","Projection","SelectNode","SelectedNode","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","component_ids","component_ids","default","default","default","default","default","downcast","downcast","downcast","downcast","downcast","downcast","downcast","eq","fmt","from","from","from","from","from","from","from","from_components","from_components","from_world","from_world","from_world","from_world","from_world","get_components","get_components","init","init_with_graph","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","new","project","set_bounding_box","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","generate_dot_string","generate_svg_string","OverpassImporter","RailwayGraphImporter","import","overpass_importer","Coordinate","ElementType","Node","OverpassImporter","RailwayElement","Way","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_geometry_length","clone","clone_into","clone_type_data","count_node_elements","count_way_elements","create_nodes","default","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","element_type","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","find_next_existing_node","fmt","fmt","fmt","from","from","from","from","from_json","from_railway_elements","from_world","geometry","id","import","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","lat","lat","lon","lon","new_with_id","nodes","serialize","serialize","serialize","tags","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","OverpassApiClient","OverpassImporter","RailwayApiClient","RailwayGraphImporter","overpass_api_client","PathFinding","shortest_path_distance","shortest_path_edges","shortest_path_nodes","OverpassApiClient","RailwayApiClient","connect","fetch_by_area_name","fetch_by_bbox","overpass_api_client","OverpassApiClient","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","connect","default","downcast","fetch_by_area_name","fetch_by_bbox","from","from_world","into","into_any","into_any_arc","into_any_rc","new","try_from","try_into","type_id","upcast","vzip","RailwayEdge","RailwayGraph","RailwayNode","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","downcast","downcast","eq","eq","fmt","fmt","from","from","id","id","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","lat","length","lon","path","railway_graph","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","RailwayGraph","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","bounding_box","clone","clone_into","clone_type_data","downcast","eq","fmt","from","get_edge_by_id","graph","into","into_any","into_any_arc","into_any_rc","node_indices","railway_edge","reachable_nodes","shortest_path_distance","shortest_path_edges","shortest_path_nodes","to_owned","total_length","try_from","try_into","type_id","upcast","vzip"],"q":["openrailwaymap_exporter","","","","","","","openrailwaymap_exporter::app3d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openrailwaymap_exporter::export","","openrailwaymap_exporter::importer","","","","openrailwaymap_exporter::importer::overpass_importer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openrailwaymap_exporter::prelude","","","","","openrailwaymap_exporter::railway_algorithms","","","","openrailwaymap_exporter::railway_api_client","","","","","","openrailwaymap_exporter::railway_api_client::overpass_api_client","","","","","","","","","","","","","","","","","","","","","","","openrailwaymap_exporter::railway_model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openrailwaymap_exporter::railway_model::railway_graph","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The <code>app3d</code> module provides functionality to visualize …","Export module for the OpenRailwayMap Exporter.","module for importers","This prelude re-exports the most commonly used items from …","Module <code>railway_algorithms</code> provides algorithms for working …","Railway API Client module for the OpenRailwayMap Exporter.","Railway Model module for the OpenRailwayMap Exporter.","Holds application state, including the area name, railway …","Represents an edge in the railway graph.","Defines the different interaction modes for the …","Stores the current interaction mode.","Represents a node in the railway graph.","Mode for placing trains on the railway network.","The <code>Projection</code> resource is responsible for converting …","Default mode: selecting nodes to display information or …","Keeps track of the currently selected start and end nodes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Initializes the Bevy application with a default …","Initializes the Bevy application with a given <code>RailwayGraph</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Projection</code> resource with the specified view …","Projects the given geographical coordinate to a view …","Sets the bounding box of the <code>Projection</code> resource based on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generates a DOT string representation of a given …","Generates an SVG string representation of a given …","","<code>RailwayGraphImporter</code> is a trait for importing railway …","Imports a railway graph from a given input data.","<code>OverpassImporter</code> is a struct that implements the …","A <code>Coordinate</code> represents a geographic coordinate with …","Represents the type of a <code>RailwayElement</code>.","Represents a <code>Node</code> element in the railway network.","<code>OverpassImporter</code> is a struct that implements the …","Represents an element of a railway network.","Represents a <code>Way</code> element in the railway network.","","","","","","","","","","","","","","","","","","","","","Calculate the total length of a sequence of coordinates by …","","","","Counts the number of <code>Node</code> elements in a given vector of …","Counts the number of <code>Way</code> elements in a vector of …","Create a vector of <code>RailwayNode</code>s from the provided …","","","","","","","","","The type of the railway element, either <code>Way</code> or <code>Node</code>.","","","","","","","Find the next existing node ID and its index in the …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Deserialize a JSON value into a vector of <code>RailwayElement</code> …","Create a <code>RailwayGraph</code> from a vector of <code>RailwayElement</code>s.","","An optional list of coordinates that represent the …","The unique identifier of the railway element.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The latitude coordinate, in decimal degrees.","The latitude coordinate of a <code>Node</code> element.","The longitude coordinate, in decimal degrees.","The longitude coordinate of a <code>Node</code> element.","Create a new <code>RailwayElement</code> instance with the specified ID.","An optional ordered list of node IDs that define the …","","","","Optional key-value pairs associated with the railway …","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>PathFinding</code> trait provides pathfinding algorithms for …","Calculate the shortest path distance between two nodes.","Calculate the shortest path between two nodes as a list of …","Calculate the shortest path between two nodes as a list of …","","A trait for implementing an Railway API client.","Connect to the OpenRailwayMap API using the specified URL.","Fetch OpenRailwayMap data by area name.","Fetch OpenRailwayMap data by bounding box.","overpass api client","A basic client for the OpenRailwayMap API.","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Creates a new <code>OverpassApiClient</code> with no specified API URL.","","","","","","Represents a railway edge with a unique ID, a length, and …","","Represents a railway node with a unique ID and geographic …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","The ID of the edge, typically corresponding to the ID of …","The unique identifier of the railway node.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","The latitude coordinate of the railway node.","The length of the railway segment in meters.","The longitude coordinate of the railway node.","The path of the edge, stored as a <code>LineString</code>.","A module for working with railway graphs.","","","","","","","","","","","","","<code>RailwayGraph</code> represents a graph structure for railway …","","","","","","Calculate the bounding box of the graph.","","","","","","","Returns the argument unchanged.","Retrieve an edge from the graph by its ID.","The internal graph used to represent the railway network.","Calls <code>U::from(self)</code>.","","","","A HashMap that maps node IDs to their corresponding …","Retrieve the railway edge between two nodes.","Find all reachable nodes from the given start node in the …","","","","","Calculate the total length of the railway network.","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,3,0,3,0,9,47,48,10,11,3,12,9,47,48,10,11,3,12,9,47,48,10,11,3,12,9,47,48,10,11,3,12,9,47,48,10,11,3,12,3,3,3,47,48,9,10,11,3,12,9,47,48,10,11,3,12,3,3,9,47,48,10,11,3,12,47,48,9,10,11,3,12,47,48,0,0,9,47,48,10,11,3,12,9,47,48,10,11,3,12,9,47,48,10,11,3,12,9,47,48,10,11,3,12,9,9,9,3,9,47,48,10,11,3,12,9,47,48,10,11,3,12,9,47,48,10,11,3,12,9,47,48,10,11,3,12,9,47,48,10,11,3,12,0,0,0,0,49,0,0,0,35,0,0,35,50,30,35,34,50,30,35,34,50,30,35,34,50,30,35,34,50,30,35,34,0,30,30,30,0,0,0,34,30,35,34,50,30,35,34,34,30,35,34,30,35,34,0,30,35,34,50,30,35,34,34,0,34,34,34,50,50,30,35,34,50,30,35,34,50,30,35,34,50,30,35,34,30,34,30,34,34,34,30,35,34,34,30,50,30,35,34,50,30,35,34,50,30,35,34,50,30,35,34,50,30,35,34,0,0,0,0,0,0,51,51,51,0,0,52,52,52,0,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,0,0,46,32,46,32,46,32,46,32,46,32,46,32,46,32,46,32,46,32,46,32,46,32,46,32,46,32,46,32,46,32,46,32,46,32,32,46,32,46,0,46,32,46,32,46,32,46,32,46,32,46,32,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,3],[[]],[[],[[6,[4,5]]]],[[7,8]],[[7,8]],[[],9],[[],10],[[],11],[[],3],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,3],13],[[3,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16],[16],[16],[16],[16],[[]],[[]],[[]],[17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[5]]],[[6,[1,5]]]],[[[6,[5]]],[[6,[1,5]]]],[[[6,[5]]],[[6,[1,5]]]],[[[6,[5]]],[[6,[1,5]]]],[[[6,[5]]],[[6,[1,5]]]],[[[6,[5]]],[[6,[1,5]]]],[[[6,[5]]],[[6,[1,5]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[[20,20],9],[[9,21],[[23,[22]]]],[[9,21,21]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17,[[24,[26,[6,[27]]]]]],[17,[[24,[26,[6,[27]]]]]],0,0,[28,[[29,[17]]]],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[30,30],[[]],[[],[[6,[4,5]]]],[[],31],[[],31],[[],[[33,[32]]]],[[],34],[[],[[24,[30]]]],[[],[[24,[35]]]],[[],[[24,[34]]]],[[]],[[]],[[]],[[]],0,[[30,30],13],[[35,35],13],[[34,34],13],[36,[[24,[37,38]]]],[36,[[24,[37,38]]]],[36,[[24,[37,38]]]],[[[23,[39]],40]],[[30,14],15],[[35,14],15],[[34,14],15],[[]],[[]],[[]],[[]],[28,[[24,[[33,[34]],41]]]],[[],17],[16],0,0,[28,[[29,[17]]]],[[]],[[]],[[]],[[]],[[[6,[5]]],[[6,[1,5]]]],[[[6,[5]]],[[6,[1,5]]]],[[[6,[5]]],[[6,[1,5]]]],[[[6,[5]]],[[6,[1,5]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],0,0,0,0,[39,34],0,[30,24],[35,24],[34,24],0,[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[[],25],[[],23],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[39,39],[[23,[20]]]],[[39,39],[[23,[[33,[39]]]]]],[[39,39],[[23,[[33,[39]]]]]],0,0,[42,[[44,[[6,[43]]]]]],[42,[[44,[[6,[43]]]]]],[42,[[44,[[6,[43]]]]]],0,0,[[],1],[[],1],[2],[[]],[[]],[[45,42],[[44,[[6,[43]]]]]],[[],45],[[]],[[45,42],[[44,[[6,[43]]]]]],[[45,42],[[44,[[6,[43]]]]]],[[]],[16],[[]],[[[6,[5]]],[[6,[1,5]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[[],45],[[],24],[[],24],[[],25],[[],23],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[2],[2],[[]],[[]],[[]],[[]],[46,46],[32,32],[[]],[[]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[]],[[]],[[46,46],13],[[32,32],13],[[46,14],15],[[32,14],15],[[]],[[]],0,0,[[]],[[]],[[[6,[5]]],[[6,[1,5]]]],[[[6,[5]]],[[6,[1,5]]]],[18,[[18,[1]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[19,[[19,[1]]]],0,0,0,0,0,[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],23],[[],23],[[]],[[]],0,[[],1],[[],1],[2],[[]],[[]],[17],[17,17],[[]],[[],[[6,[4,5]]]],[[]],[[17,17],13],[[17,14],15],[[]],[[17,39],[[23,[46]]]],0,[[]],[[[6,[5]]],[[6,[1,5]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],0,[[17,39,39],[[23,[46]]]],[[17,39],[[33,[39]]]],[[17,39,39],[[23,[20]]]],[[17,39,39],[[23,[[33,[39]]]]]],[[17,39,39],[[23,[[33,[39]]]]]],[[]],[17,20],[[],24],[[],24],[[],25],[[],23],[[]]],"p":[[8,"Any"],[3,"RenderAssets"],[4,"InteractionMode"],[8,"TypeData"],[3,"Global"],[3,"Box"],[3,"Components"],[3,"Storages"],[3,"Projection"],[3,"AppResource"],[3,"SelectedNode"],[3,"InteractionModeResource"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"World"],[3,"RailwayGraph"],[3,"Arc"],[3,"Rc"],[15,"f64"],[3,"Coord"],[3,"Vec3"],[4,"Option"],[4,"Result"],[3,"TypeId"],[3,"String"],[8,"Error"],[4,"Value"],[6,"Result"],[3,"Coordinate"],[15,"usize"],[3,"RailwayNode"],[3,"Vec"],[3,"RailwayElement"],[4,"ElementType"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[15,"i64"],[3,"HashMap"],[3,"Error"],[15,"str"],[8,"Future"],[3,"Pin"],[3,"OverpassApiClient"],[3,"RailwayEdge"],[3,"Edge"],[3,"Node"],[8,"RailwayGraphImporter"],[3,"OverpassImporter"],[8,"PathFinding"],[8,"RailwayApiClient"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
